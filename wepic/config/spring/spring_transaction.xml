<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-2.5.xsd"> 
	
	<!-- common -->	<!-- 事务配置 -->
	<!--config Hibernate local transaction manager,using HibernateTransactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" 	lazy-init="true"> 
		<property name="sessionFactory" ref="sessionFactory"/>
		<!--<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property> 
	 	-->
	</bean> 

	
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	
		 
	  
	<!-- 
	<context:annotation-config />
    <context:component-scan base-package="com.qhkj.goodChance.deal.test" />
     -->
    
    
	<!-- 	<tx:annotation-driven proxy-target-class ="true" transaction-manager="transactionManager"/>   	-->
	
 	<!--  test ok

	<tx:annotation-driven transaction-manager="transactionManager" /> 
	<context:annotation-config />  
	<context:component-scan base-package="com.qhkj.goodChance.deal.test" />
	<tx:annotation-driven proxy-target-class ="true" transaction-manager="transactionManager"/>  
 	-->
 	<!-- 

	<tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes>	
			<tx:method name="get*" read-only="true"/>
			<tx:method name="add*" rollback-for="Exception" />	

			<tx:method name="transferMoney" propagation="REQUIRES_NEW" />	
			<tx:method name="*" propagation="REQUIRED" />  
			<tx:method name="*"/> 

			<tx:method name="transferMoneyDetail"/> 
			<tx:method name="trans*" rollback-for="Exception" />	
			<tx:method name="*"/>  
			<tx:method name="*" propagation="REQUIRED" />  

		</tx:attributes>

	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="leeService" expression="execution(* com.qhkj.goodChance.deal.test.*.*(..))"/> 
		<aop:advisor advice-ref="txAdvice" 	pointcut-ref="leeService"/> 

	</tx:advice>	
	<aop:config proxy-target-class="true" >
		<aop:pointcut id="interceptorPointCuts" 
			expression="execution(* com.qhkj.goodChance.deal.test.*.*(..))" /> 
		<aop:advisor advice-ref="txAdvice" 	pointcut-ref="interceptorPointCuts"/> 

	</aop:config>
	 -->
		

	<!-- 每个bean都有一个代理  test ok
    <bean id="testAccountTransactionProxy2"  class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">    

	
	
	--> 
	<!-- 
    <bean id="TestAccountTransactionProxy"    
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">    

        <property name="transactionManager" ref="transactionManager" />       
        <property name="target" ref="testAccountTrans" />    
        <property name="proxyInterfaces" value="com.qhkj.goodChance.deal.test.ITestAccountTransaction" />  
        <property name="transactionAttributes">    
            <props>    
                <prop key="trans*">PROPAGATION_REQUIRES_NEW</prop>  
            </props>    
        </property>    
    </bean>
    --> 
       
    
	<!-- 所有的bean共享一个代理 
    <bean id="transactionBase"    
            class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"    
            lazy-init="true" abstract="true">    
        <property name="transactionManager" ref="transactionManager" />    
        <property name="transactionAttributes">    
            <props>    
                <prop key="*">PROPAGATION_REQUIRED</prop>    
            </props>    
        </property>    
    </bean>      
     -->  
     <!-- each bean共享一个代理/>  
    <bean id="userDaoProxy" parent="transactionBase" >    
        <property name="target" ref="userDao" />     
    </bean>  
     --> 
	<!--  
	 <bean id="transactionInterceptor"    
        class="org.springframework.transaction.interceptor.TransactionInterceptor">    
        <property name="transactionManager" ref="transactionManager" />    
        <property name="transactionAttributes">    
            <props>    
                <prop key="*">PROPAGATION_REQUIRED</prop>    
            </props>    
        </property>    
    </bean>  
     -->
    
    
    
    <!-- 定义BeanNameAutoProxyCreator,该bean是个bean后处理器，无需被引用，因此没有id属性     
    这个bean后处理器，根据事务拦截器为目标bean自动创建事务代理    --> 
     <!-- 加上此句就不会抛出 $Proxy cannot be cast的异常啦 
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">    
        <property name="proxyTargetClass">  
              <value>true</value>  
        </property>    
        <property name="beanNames">    
            <list>    
                <value>userDao</value>  
            </list>    
        </property>    
        <property name="interceptorNames">    
            <list>    
                <value>transactionInterceptor</value>    
                <value>logBeforeAdvice</value>  
            </list>    
        </property>    
    </bean>    
	
	  -->
	
	
	
			
<!-- //@#$% -->
</beans>
