package com.wetuo.wepic.core.actions;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.json.annotations.JSON;

import com.sms.util.SendSMS;
import com.wetuo.wepic.common.struts.PageAction;
import com.wetuo.wepic.common.util.MD5Code;
import com.wetuo.wepic.common.util.SendEmail;
import com.wetuo.wepic.core.beans.LoginHistory;
import com.wetuo.wepic.core.beans.RoleTags;
import com.wetuo.wepic.core.beans.User;
import com.wetuo.wepic.core.beans.UserInfoBeans;
import com.wetuo.wepic.core.service.UserCatService;
import com.wetuo.wepic.core.service.UserService;

public class ConfigurationAction extends PageAction{
	private Integer userId;
	private String inputmail;
	private String inputcode;
	private String mobilecode;
	private String newmobile;
	private String oldpwd;
	private String newpwd;
	public String modifypassword() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "modifypassword";
	}
	@JSON(serialize=false)
	public String validatepwd() throws Exception {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		String useroldpwd=user.getPassword();
		
		MD5Code des = new MD5Code("leemenz");
		String jiemi=des.decrypt(useroldpwd);
		if (jiemi.equalsIgnoreCase(oldpwd)) {
			state="1";
		}else {
			state="0";
		}
		return "validatepwd";
	}
	public String modifypwdsuc() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "modifypwdsuc";
	}
	public String modifysucpwd() throws Exception {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		MD5Code des = new MD5Code("leemenz");
		String newjiami=des.encrypt(newpwd);
		user.setPassword(newjiami);
		this.getUserService().update(user);
		state="1";
		return "modifysucpwd";
	}
	public String modifymobile() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "modifymobile";
	}
	public String configuration() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "configuration";
	}
	public String changephonebycurrentemail() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
	    return "changephonebycurrentemail";	
	}
	public String changephonebycurrentmobile() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "changephonebycurrentmobile";
	}
	public String validateloginpwd() throws Exception {
		String writepwd=ServletActionContext.getRequest().getParameter("inputpwd");
		user=this.getUserService().selectById(userId);
		MD5Code des = new MD5Code("leemenz");
		String despwd=des.decrypt(user.getPassword());//解密
		if (writepwd.equalsIgnoreCase(despwd)) {
			state="1";
		}else {
			state="0";
		}
		return "validateloginpwd";
	}
	
	public String changesteptwo() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "changesteptwo";
	}
	
	public String changephonesteptwo() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "changephonesteptwo";
	}
	public String validatemail() throws Exception {
		List<User> users=this.getUserService().findAll();
		int repeat = 0;
		for (int i = 0; i < users.size(); i++) {
			if (users.get(i).getEmail().equalsIgnoreCase(inputmail)) {
				state="1";
				repeat++;
			}
		}
		if (repeat == 0) {
			state ="0";
			int id=super.getLonginUserId();
			User user=this.getUserService().selectById(id);
			user.setEmail(inputmail);
			this.getUserService().update(user);
			String rs="";
			String rn="";
			Random random = new Random();
			for(int i=0;i<4;i++){
				rn = String.valueOf(random.nextInt(10));
				rs+=rn;
				}
			setSession("loginValidateCode", rs);
			sendMsg(user.getUsername(),rs);
		}
		return "validatemail";
	}
	
	public String sendregemail() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "sendregemail";
	}
	
	public String validatecode() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		String sessioncode=getSession("loginValidateCode").toString();
		if (inputcode.equalsIgnoreCase(sessioncode)) {
			state="1";
		}else {
			state ="0";
		}
//		setSession("loginValidateCode", rs);
		return "validatecode";
	}
	public String checkmailfail() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "checkmailfail";
	}
	public String changephonefail() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "changephonefail";
	}
	public String modifysuc() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "modifysuc";
	}
	public String changephonesuc() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "changephonesuc";
	}
	public String securityIndex() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "securityIndex";
	}
	public String mobilevalidate() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		loginHistory=this.getUserService().recentHistory();
		return "mobilevalidate";
	}
	public String validatemobilecode2() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		String sessioncode=getSession("msgcode").toString();
		if (mobilecode.equalsIgnoreCase(sessioncode)) {
			state="1";
		}else {
			state ="0";
		}
		return "validatemobilecode2";
	}
	public String validatemobilecode() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		user.setMobile(newmobile);
		this.getUserService().update(user);
		String sessioncode=getSession("msgcode").toString();
		if (mobilecode.equalsIgnoreCase(sessioncode)) {
			state="1";
		}else {
			state ="0";
		}
		return "validatemobilecode";
	}
	
	public String sendmobilecodeofmodifyemail() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		String code=getRandomStr();
		System.out.println(code);
		setSession("msgcode",code);
		state="1";
		String tempcode=getRandomStr();
		SendSMS sendSMS=new SendSMS();
		sendSMS.setUsername("639198");
		sendSMS.setPassword("8df7ed01c3e41c43cbd9d9df75eb99c3");
		sendSMS.setMessage("您正在进行邮箱修改操作,请输入验证码："+tempcode+"（唯图网）");
		sendSMS.setMobiles(user.getMobile());
		sendSMS.setServicesRequestAddRess("http://sms.c8686.com/Api/BayouSmsApiEx.aspx");
		sendSMS.setSmstype(0);
		sendSMS.setTimerid("0");
		sendSMS.setTimertype(0);
		Map<String, String> map = sendSMS.sendSMS();
		int sendflag=Integer.valueOf(map.get("errorcode").toString());
		HttpSession ses =ServletActionContext.getRequest().getSession();
		if (sendflag == 0) {
			ses.setAttribute("msgcode",code);
			ses.setMaxInactiveInterval(10*60);
		}
		return "sendmobilecodeofmodifyemail";
	}
	public String sendmobilecode() {
		int id=super.getLonginUserId();
		user=this.getUserService().selectById(id);
		String code=getRandomStr();
		System.out.println(code);
		setSession("msgcode",code);
		state="1";
		String tempcode=getRandomStr();
		SendSMS sendSMS=new SendSMS();
		sendSMS.setUsername("639198");
		sendSMS.setPassword("8df7ed01c3e41c43cbd9d9df75eb99c3");
		sendSMS.setMessage("您在唯图网账户修改的新手机为："+tempcode+"。请输入验证码："+tempcode+"（唯图网）【唯图网】");
		sendSMS.setMobiles(user.getMobile());
		sendSMS.setServicesRequestAddRess("http://sms.c8686.com/Api/BayouSmsApiEx.aspx");
		sendSMS.setSmstype(0);
		sendSMS.setTimerid("0");
		sendSMS.setTimertype(0);
		Map<String, String> map = sendSMS.sendSMS();
		int sendflag=Integer.valueOf(map.get("errorcode").toString());
		HttpSession ses =ServletActionContext.getRequest().getSession();
		if (sendflag == 0) {
			ses.setAttribute("msgcode",code);
			ses.setMaxInactiveInterval(10*60);
		}
		return "sendmobilecode";
	}
	public String getRandomStr(){
		Random random = new Random();
		String baseStr = "0123456789";
		StringBuffer buffer = new StringBuffer();
		for(int i=0;i<4;i++){
		int num = random.nextInt(baseStr.length());
		buffer.append(baseStr.charAt(num));
		}
		return buffer.toString();
		} 
	public void sendMsg(String username, String code) throws Exception {
		User userMsg = this.getUserService().select(username);
		String content1 = "尊敬的"+userMsg.getNickName()+",您好<br/><br/><br/>";
		content1 += "&nbsp;&nbsp;&nbsp;&nbsp;您在唯图网账户中修改的新邮箱为：" + userMsg.getEmail() + "。<br/>";
		content1 += "&nbsp;&nbsp;请输入下面验证码用以通过系统验证："+code+"<br/><br/>";
	    content1 += "唯图网客服团队<br/>";
		content1 += "serve@wepic.cn";
		Map<String, String> map = new HashMap<String, String>();

		// 邮件服务器主机名(smtp服务器地址)
		// 如：qq的smtp服务器地址：smtp.qq.com
		map.put("smtp", "smtp.qq.com");
		// 邮件传输协议：如smtp
		map.put("protocol", "smtp");
		// 登录邮箱的用户名
		map.put("username", "message@wepic.cn");
		// 登录邮箱的密码
		map.put("password", "wepic20070804");
		// 发送人的帐号
		map.put("from", "message@wepic.cn");
		// 接收人的帐号，多个以","号隔开
		map.put("to", userMsg.getEmail());
		// 邮件主题
		map.put("subject", "新邮箱生成的验证码");
		// 邮件内容
		map.put("body", content1);

		// 内嵌了多少张图片，如果没有，则new一个不带值的Map
		Map<String, String> image = new HashMap<String, String>();
//		String path = ServletActionContext.getRequest().getRealPath(
//				"public/images/118.jpg");
//		image.put("a00000001", path);

		// 附件的绝对路径,不发附件则new一个不带值的List
		List<String> list = new ArrayList<String>();
		SendEmail sendEmail = new SendEmail(map, list, image);
		sendEmail.send();
	}
	private UserService userService;
	private String message;
	private User user;
	private int id;
	private String rePassword;
	private String registerId;
	private String imgcode;
	private String code;
	private String state;
	private UserInfoBeans userInfoBeans;
	private File portraitFile;
	private String tempPicName;
	private int x;
	private int y;
	private int w;
	private int h;
	private UserCatService userCatService;
    private List<RoleTags> roleTags;
	private LoginHistory loginHistory;
	public UserCatService getUserCatService() {
		return userCatService;
	}


	public void setUserCatService(UserCatService userCatService) {
		this.userCatService = userCatService;
	}


	


	//private
	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}



	public String getMessage() {
		return message;
	}



	public void setMessage(String message) {
		this.message = message;
	}


	public String getRePassword() {
		return rePassword;
	}


	public void setRePassword(String rePassword) {
		this.rePassword = rePassword;
	}


	public User getUser() {
		return user;
	}


	public void setUser(User user) {
		this.user = user;
	}


	public String getRegisterId() {
		return registerId;
	}


	public void setRegisterId(String registerId) {
		this.registerId = registerId;
	}


	public String getImgcode() {
		return imgcode;
	}


	public void setImgcode(String imgcode) {
		this.imgcode = imgcode;
	}


	public int getId() {
		return id;
	}


	public void setId(int id) {
		this.id = id;
	}


	public String getCode() {
		return code;
	}


	public void setCode(String code) {
		this.code = code;
	}


	public String getState() {
		return state;
	}


	public void setState(String state) {
		this.state = state;
	}


	public UserInfoBeans getUserInfoBeans() {
		return userInfoBeans;
	}


	public void setUserInfoBeans(UserInfoBeans userInfoBeans) {
		this.userInfoBeans = userInfoBeans;
	}


	public File getPortraitFile() {
		return portraitFile;
	}


	public void setPortraitFile(File portraitFile) {
		this.portraitFile = portraitFile;
	}


	public String getTempPicName() {
		return tempPicName;
	}


	public void setTempPicName(String tempPicName) {
		this.tempPicName = tempPicName;
	}


	public int getX() {
		return x;
	}


	public void setX(int x) {
		this.x = x;
	}


	public int getY() {
		return y;
	}


	public void setY(int y) {
		this.y = y;
	}


	public int getW() {
		return w;
	}


	public void setW(int w) {
		this.w = w;
	}


	public int getH() {
		return h;
	}


	public void setH(int h) {
		this.h = h;
	}


	public List<RoleTags> getRoleTags() {
		return roleTags;
	}


	public void setRoleTags(List<RoleTags> roleTags) {
		this.roleTags = roleTags;
	}









	public LoginHistory getLoginHistory() {
		return loginHistory;
	}









	public void setLoginHistory(LoginHistory loginHistory) {
		this.loginHistory = loginHistory;
	}

	public Integer getUserId() {
		return userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public String getInputmail() {
		return inputmail;
	}

	public void setInputmail(String inputmail) {
		this.inputmail = inputmail;
	}

	public String getInputcode() {
		return inputcode;
	}

	public void setInputcode(String inputcode) {
		this.inputcode = inputcode;
	}

	public String getMobilecode() {
		return mobilecode;
	}

	public void setMobilecode(String mobilecode) {
		this.mobilecode = mobilecode;
	}
	public String getNewmobile() {
		return newmobile;
	}
	public void setNewmobile(String newmobile) {
		this.newmobile = newmobile;
	}
	public String getOldpwd() {
		return oldpwd;
	}
	public void setOldpwd(String oldpwd) {
		this.oldpwd = oldpwd;
	}
	public String getNewpwd() {
		return newpwd;
	}
	public void setNewpwd(String newpwd) {
		this.newpwd = newpwd;
	}
}
